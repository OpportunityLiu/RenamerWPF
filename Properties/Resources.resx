<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonClear" xml:space="preserve">
    <value>清空(_C)</value>
  </data>
  <data name="ButtonRename" xml:space="preserve">
    <value>重命名(_R)</value>
  </data>
  <data name="ErrorEmptyFileName" xml:space="preserve">
    <value>文件名为空</value>
  </data>
  <data name="ErrorInfoEmptyFileName" xml:space="preserve">
    <value>新文件名有误，
文件名不能为空。</value>
  </data>
  <data name="ErrorInfoNotAllowedName" xml:space="preserve">
    <value>新文件名有误，
文件名包含特殊字符或长度过长。</value>
  </data>
  <data name="ErrorInfoRegexMatchNotFound" xml:space="preserve">
    <value>没有找到可以匹配的项目，‎
请尝试更换正则表达式。</value>
  </data>
  <data name="ErrorInfoRegexPattern" xml:space="preserve">
    <value>正则表达式有误，
无法进行匹配。</value>
  </data>
  <data name="ErrorInfoRegexTimeOut" xml:space="preserve">
    <value>正则匹配超时，
请尝试更换正则表达式。</value>
  </data>
  <data name="ErrorInfoRename" xml:space="preserve">
    <value>在重命名操作的过程中出现错误
错误信息：
    {0}</value>
  </data>
  <data name="ErrorRegexMatchNotFound" xml:space="preserve">
    <value>匹配失败</value>
  </data>
  <data name="ErrorRegexPattern" xml:space="preserve">
    <value>表达式有误</value>
  </data>
  <data name="ErrorRegexTimeOut" xml:space="preserve">
    <value>匹配超时</value>
  </data>
  <data name="ErrorRename" xml:space="preserve">
    <value>重命名错误</value>
  </data>
  <data name="HintDragToAddFile" xml:space="preserve">
    <value>拖动以添加文件...</value>
  </data>
  <data name="HintFileCount" xml:space="preserve">
    <value>项目总数</value>
  </data>
  <data name="HintSelectedFileCount" xml:space="preserve">
    <value>所选项目数量</value>
  </data>
  <data name="LableFind" xml:space="preserve">
    <value>查找…</value>
  </data>
  <data name="LableTo" xml:space="preserve">
    <value>替换为…</value>
  </data>
  <data name="MenuDelete" xml:space="preserve">
    <value>删除(_D)</value>
  </data>
  <data name="StatusFileCount" xml:space="preserve">
    <value>{0} 个项目</value>
  </data>
  <data name="StatusSelectedFileCount" xml:space="preserve">
    <value>已选择 {0} 个项目</value>
  </data>
  <data name="ViewNewFileName" xml:space="preserve">
    <value>新文件名</value>
  </data>
  <data name="ViewOldFileName" xml:space="preserve">
    <value>原文件名</value>
  </data>
  <data name="HintWait" xml:space="preserve">
    <value>请等待当前操作完成。</value>
  </data>
</root>