//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RenamerWpf.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RenamerWpf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        public static System.Drawing.Bitmap DefaultFileIcon {
            get {
                object obj = ResourceManager.GetObject("DefaultFileIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 文件名为空 的本地化字符串。
        /// </summary>
        public static string EmptyFileNameError {
            get {
                return ResourceManager.GetString("EmptyFileNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 新文件名有误，
        ///文件名不能为空。 的本地化字符串。
        /// </summary>
        public static string EmptyFileNameErrorInfo {
            get {
                return ResourceManager.GetString("EmptyFileNameErrorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 新文件名有误，
        ///文件名不应包含特殊字符，
        ///也不能长于 225 个字符。 的本地化字符串。
        /// </summary>
        public static string NotAllowedNameErrorInfo {
            get {
                return ResourceManager.GetString("NotAllowedNameErrorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 匹配失败 的本地化字符串。
        /// </summary>
        public static string RegexMatchNotFoundError {
            get {
                return ResourceManager.GetString("RegexMatchNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 没有找到可以匹配的项目，‎
        ///请尝试更换正则表达式。 的本地化字符串。
        /// </summary>
        public static string RegexMatchNotFoundErrorInfo {
            get {
                return ResourceManager.GetString("RegexMatchNotFoundErrorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 表达式有误 的本地化字符串。
        /// </summary>
        public static string RegexPatternError {
            get {
                return ResourceManager.GetString("RegexPatternError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 正则表达式有误，
        ///无法进行匹配。 的本地化字符串。
        /// </summary>
        public static string RegexPatternErrorInfo {
            get {
                return ResourceManager.GetString("RegexPatternErrorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 匹配超时 的本地化字符串。
        /// </summary>
        public static string RegexTimeOutError {
            get {
                return ResourceManager.GetString("RegexTimeOutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 正则匹配超时，
        ///请尝试更换正则表达式。 的本地化字符串。
        /// </summary>
        public static string RegexTimeOutErrorInfo {
            get {
                return ResourceManager.GetString("RegexTimeOutErrorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 重命名错误 的本地化字符串。
        /// </summary>
        public static string RenameError {
            get {
                return ResourceManager.GetString("RenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 在重命名操作的过程中出现错误
        ///错误信息：
        ///    {0} 的本地化字符串。
        /// </summary>
        public static string RenameErrorInfo {
            get {
                return ResourceManager.GetString("RenameErrorInfo", resourceCulture);
            }
        }
    }
}
