<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonClear" xml:space="preserve">
    <value>_Clear</value>
  </data>
  <data name="ButtonRename" xml:space="preserve">
    <value>_Rename</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DefaultFileIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAvlJREFUaEPVWbFqHDEU9P8X51TXhbg6uPrq68JVV9kkDoRL43ROF2Mc4qDsbBgY
        HiOt1kh32WJ4T6MnvRlpheF8lVJaNCy5JFhySbDkkmDJJcGSirvb2/TtdEqIrfD94SHdf/o4bO97zoEl
        FWj48+kp/Xh8bAbsd/p6l24+vB9a+L61sKQCBv68/m6Gl+fnETCCm91sNkMb37sGllQ4AxDA/NfLv1w5
        5o7D6QNYt9/vRxPb7XZo5ftPwZIKNaCCHFcSrkbJ7Xa70QDexFs/J0sqSjfghJa4GGEA4vE5Ib7lJiyp
        iAbmfjKlehjA54ScJua+CUsqogEnpMS5SFM0oCaAOSYsqci9gShM83jqGjkH4BEfDod0PB5HIAfwLtbr
        9dDea1JYUpG7AUbNS8JdxGljfwj+cv95zBH5sGtMWFLhboBR81rxsc6Bn1RzA4A2zomkAHIqGrnWccw5
        oJsBNtZcxbkazjNSHCNqdK0aeHd9PUjwughLKnI3kBMexWg+VUNgDKxWq0GC10VYUlF6A6VIYdGonnxO
        PGuaG2CzqajCkHOs4jnGHMaRQ97cgArLxShWRcc6jrUGPPdo/ohrDOSi5k48T57z4Lr/HdBmjPHkKUzr
        43qFrj2LAUbFVA3GNOZwFgNoxFx5nSdYw/l4O7m6s9wAc4rCGGKm5iNYq2u6GEAz5mykHHMI5nzNiUeg
        vqmBKJJNOCYoNDdPgC8Ba5vfgH4GGnmyudxBxTpgfVMD3FQjQDEqmLlytcIJrO1yAyoGHJthTnOtA1Rc
        DbBPtxtQ8QS5uSfuarFHcwMUTJFsRg5RxaigKXA/mu9iIAqjEUadZ00JpbouBrCxRhXPWCuewJoYsZ57
        dnnEaEShDhSXQ01dFwPcnLmKrhGl0BPPxS4GELH5XPG1dUQXAxQfTTgBDlgzJzY3oKc4Jby2LgeY6GbA
        NXSACNTnTrgUgYsZmGOSe+qarga0eQl6mlMxh2YG8EsxNrsEmhjAPxsuhSY/bP3vsORykK7+Atfe+7UZ
        hozdAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="ErrorEmptyFileName" xml:space="preserve">
    <value>Empty file name</value>
  </data>
  <data name="ErrorInfoEmptyFileName" xml:space="preserve">
    <value>Wrong new filename,
file name can't be empty.</value>
  </data>
  <data name="ErrorInfoNotAllowedName" xml:space="preserve">
    <value>Wrong new filename,
file name should not contain special characters or more than 225 characters.</value>
  </data>
  <data name="ErrorInfoRegexMatchNotFound" xml:space="preserve">
    <value>Matches are not found,
try replacing the regular expression.</value>
  </data>
  <data name="ErrorInfoRegexPattern" xml:space="preserve">
    <value>Regular expression error,
unable to match.</value>
  </data>
  <data name="ErrorInfoRegexTimeOut" xml:space="preserve">
    <value>Regex matching times out,
try replacing the regular expression.</value>
  </data>
  <data name="ErrorInfoRename" xml:space="preserve">
    <value>Error occurred during the rename operation.
Error message:
    {0}</value>
  </data>
  <data name="ErrorRegexMatchNotFound" xml:space="preserve">
    <value>Matches not found</value>
  </data>
  <data name="ErrorRegexPattern" xml:space="preserve">
    <value>Wrong regular expression</value>
  </data>
  <data name="ErrorRegexTimeOut" xml:space="preserve">
    <value>Matching timeout</value>
  </data>
  <data name="ErrorRename" xml:space="preserve">
    <value>Error occurred when renaming</value>
  </data>
  <data name="HintDragToAddFile" xml:space="preserve">
    <value>Drag and drop to add file...</value>
  </data>
  <data name="HintFileCount" xml:space="preserve">
    <value>Total item count</value>
  </data>
  <data name="HintSelectedFileCount" xml:space="preserve">
    <value>Selected item count</value>
  </data>
  <data name="LableFind" xml:space="preserve">
    <value>Find what...</value>
  </data>
  <data name="LableTo" xml:space="preserve">
    <value>Replace with...</value>
  </data>
  <data name="MenuDelete" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="StatusFileCount" xml:space="preserve">
    <value>{0} item(s)</value>
  </data>
  <data name="StatusSelectedFileCount" xml:space="preserve">
    <value>{0} item(s) selected</value>
  </data>
  <data name="ViewNewFileName" xml:space="preserve">
    <value>New name</value>
  </data>
  <data name="ViewOldFileName" xml:space="preserve">
    <value>Old name</value>
  </data>
</root>